
BOARD_NAME = uemd

BOARD_CONFIG = ./board/uemd/config.h

BOARD_LDSCRIPT = ./board/uemd/boot.lds

BOARD_TEXT_BASE = 0x00100010

BOARD_CPPFLAGS = \
	$(ARCH_CPPFLAGS) \
	$(CPU_CPPFLAGS)

BOARD_CFLAGS = \
	$(ARCH_CFLAGS) \
	$(CPU_CFLAGS)

BOARD_OBJS = \
	board/uemd/uemd.o \
	board/uemd/uemd_ddr.o \
	board/uemd/uemd_console.o \
	board/uemd/uemd_early.o \
	board/uemd/start.o \
	board/uemd/timer.o \
	$(ARCH_OBJS) \
	$(CPU_OBJS) \
	$(COBJS-libfdt)

BOARD_ELF = mboot-uemd

BOARD_BIN = mboot-uemd.bin

BOARD_IMG = mboot-uemd.img

BOARD_SIGN = mboot-signed.bin

.PHONY: all clean install snapshot

all: rules_all $(BOARD_IMG) $(BOARD_SIGN)

install: $(BOARD_IMG)
	-@if test -d "$(INSTDIR)" ; then \
		sudo cp -v $^ $(INSTDIR)/mboot.img ;\
	else \
		echo "INSTDIR is not defined" >&2 ; \
	fi

clean: rules_clean
	-@ rm $(BOARD_IMG)

include arch/arm/Makefile
include arch/arm/cpu/arm1176/Makefile
include lib/libfdt/Makefile
include rules.mk

$(BOARD_IMG): $(BOARD_BIN)
	$(SILENT_IMG)dd if=/dev/zero of=$@ bs=1 count=16 2>/dev/null; \
	cat $^ >> $@

$(BOARD_SIGN): $(BOARD_IMG)
	$(SILENT_MD5)./sign.sh $^ 2>/dev/null

snapshot: $(BOARD_ELF) $(BOARD_IMG)
	./snapshot $(BOARD_ELF)

BDATE=$(shell date +%d%m%Y)

package_boot_fw:
	cp -Rfv fw.skel fw-bootloader-only-$(BDATE)
	cp mboot-uemd.bin ./fw-bootloader-only-$(BDATE)/
	cp mboot-signed.bin ./fw-bootloader-only-$(BDATE)/
	tar cvpzf ./fw-bootloader-only-$(BDATE).tgz ./fw-bootloader-only-$(BDATE)/


