MBOOT bootloader
================

MBOOT is a clone of well known das U-Boot, with reduced functionality. I think,
it is it's main benefit. The key point is:

	Allow the board owner to write a code he needs to boot the board.

This means that there is no single board_init_r function for everyone with tones
of defines, callbacks, switches and bugs people are afraid to fix because they
think it can hurt someone else. Sorry for my English, there are probably some
grammar mistakes.

Other features:

* All board's boot procedure is in single file (actually, only one board is
  supported - the one I have access to). See board/uemd/uemd.c for an
  illustration.
* Smaller and cleaner Makefile. No symlinks, almost no generated files, still
  supporting linux-style CONFIG_ defines. Works faster!
* Cleaner code: Network stack and Main loop now have explicit states, main
  booting procedure is in single board-specific file, lighter environment system.
* New MTD stack and read-write routines.
* Easy framework for in-place generating of Linux tags and commad line.
* No that f*cking relocation, easy to debug.

Working commands are: help, setenv, getenv, saveenv, reset, bootm, mtdboot,
tftpboot, ping, version, mtd, fwupgrade and some other which are not so important.

Unfortunately, there are heavy limitations, U-boot is a huge project after all.

* Only Linux kernels, only legacy uImage format, no compression, no RAM disks
  (but it can be added easily)
* One arch (ARM 1176), one board (unknown for the public).

Compile
=======

To build the bootloader one have to type

	export CROSS_COMPILE=<your compiler prefix>
	make -f Makefile.<board>

Known to work with my compiler - gcc version 4.4.5 p1.3, pie-0.4.5 built with
the help of Gentoo crossdev suit.

KNOWN BUGS
==========

* Makefile doesn't like when you remove headers.
* Tones of garbage U-boot code. Most of commands are disabled and have to be
  adopted to the new format.
* Nasty bug is lurking somewhere in readline function. Sometimes It stops working
  when I press Ctrl+C.

